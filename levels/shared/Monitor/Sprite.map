MapMonitor:	dc.w byte_84BC-MapMonitor, byte_84C2-MapMonitor, byte_84CD-MapMonitor
		dc.w byte_84D8-MapMonitor, byte_84E3-MapMonitor, byte_84EE-MapMonitor
		dc.w byte_84F9-MapMonitor, byte_8504-MapMonitor, byte_850F-MapMonitor
		dc.w byte_851A-MapMonitor, byte_8525-MapMonitor, byte_8530-MapMonitor

byte_84BC:	dc.b 1
		dc.b $EF, $F, 0, 0, $F0

byte_84C2:	dc.b 2
		dc.b $F5, 5, 0, $10, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_84CD:	dc.b 2
		dc.b $F5, 5, 0, $14, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_84D8:	dc.b 2
		dc.b $F5, 5, 0, $18, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_84E3:	dc.b 2
		dc.b $F5, 5, 0, $1C, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_84EE:	dc.b 2
		dc.b $F5, 5, 0, $24, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_84F9:	dc.b 2
		dc.b $F5, 5, 0, $28, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_8504:	dc.b 2
		dc.b $F5, 5, 0, $2C, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_850F:	dc.b 2
		dc.b $F5, 5, 0, $30, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_851A:	dc.b 2
		dc.b $F5, 5, 0, $34, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_8525:	dc.b 2
		dc.b $F5, 5, 0, $20, $F8
		dc.b $EF, $F, 0, 0, $F0

byte_8530:	dc.b 1
		dc.b $FF, $D, 0, $38, $F0
; ---------------------------------------------------------------------------

RunObjects:
		lea	(ObjectsList).w,a0
		moveq	#$7F,d7
		moveq	#0,d0
		cmpi.b	#6,(ObjectsList+$24).w
		bcc.s	loc_8560
; ---------------------------------------------------------------------------

sub_8546:
		move.b	(a0),d0
		beq.s	loc_8556
		add.w	d0,d0
		add.w	d0,d0
		movea.l	loc_857A+2(pc,d0.w),a1
		jsr	(a1)
		moveq	#0,d0

loc_8556:
		lea	$40(a0),a0
		dbf	d7,sub_8546
		rts
; ---------------------------------------------------------------------------

loc_8560:
		moveq	#$1F,d7
		bsr.s	sub_8546
		moveq	#$5F,d7

loc_8566:
		moveq	#0,d0
		move.b	(a0),d0
		beq.s	loc_8576
		tst.b	1(a0)
		bpl.s	loc_8576
		bsr.w	ObjectDisplay

loc_8576:
		lea	$40(a0),a0

loc_857A:
		dbf	d7,loc_8566
		rts
; ---------------------------------------------------------------------------

AllObjects:	dc.l ObjSonic, Obj02, Obj03, Obj04, Obj05, Ojb06, Obj07
		dc.l ObjectFall, ObjSonicSpecial, ObjectFall, ObjectFall
		dc.l ObjectFall, ObjSignpost, ObjTitleSonic, OibjTitleText
		dc.l ObjAniTest, ObjBridge, ObjSceneryLamp, ObjLavaMaker
		dc.l ObjLavaball, ObjSwingPtfm, ObjectFall, ObjSpikeLogs
		dc.l ObjPlatform, ObjRollingBall, ObjCollapsePtfm, Obj1B
		dc.l ObjScenery, ObjUnkSwitch, ObjBallhog, ObjCrabmeat
		dc.l ObjCannonball, ObjHUD, ObjBuzzbomber, ObjBuzzMissile
		dc.l ObjCannonballExplode, ObjRing, ObjMonitor, ObjExplode
		dc.l ObjAnimals, ObjPoints, Obj2A, ObjChopper, ObjJaws
		dc.l ObjBurrobot, ObjMonitorItem, ObjMZPlatforms, ObjGlassBlock
		dc.l ObjChainPtfm, ObjSwitch, ObjPushBlock, ObjTitleCard
		dc.l ObjFloorLavaball, ObjSpikes, ObjRingLoss, ObjShield
		dc.l ObjGameOver, ObjLevelResults, ObjPurpleRock, ObjSmashWall
		dc.l ObjGHZBoss, ObjCapsule, ObjBombExplode, ObjMotobug
		dc.l ObjSpring, ObjNewtron, ObjRoller, ObjWall, Obj45
		dc.l ObjMZBlocks, ObjBumper, ObjGHZBossBall, ObjWaterfallSnd
		dc.l ObjEntryRingBeta, Obj4B, ObjLavafallMalker, ObjLavafall
		dc.l ObjLavaChase, Obj4F, ObjYardin, ObjSmashBlock, ObjMovingPtfm
		dc.l ObjCollapseFloor, ObjLavaHurt, ObjBasaran, ObjMovingBlocks
		dc.l ObjSpikedBalls, ObjGiantSpikedBalls, ObjSLZMovingPtfm
		dc.l ObjCirclePtfm, ObjStaircasePtfm, ObjSLZGirder, ObjFan
		dc.l ObjSeeSaw
; ---------------------------------------------------------------------------

ObjectFall:
		move.l	8(a0),d2
		move.l	$C(a0),d3
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d2
		move.w	$12(a0),d0
		addi.w	#$38,d0
		move.w	d0,$12(a0)
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d2,8(a0)
		move.l	d3,$C(a0)
		rts
; ---------------------------------------------------------------------------

ObjectMove:
		move.l	8(a0),d2
		move.l	$C(a0),d3
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d2
		move.w	$12(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d2,8(a0)
		move.l	d3,$C(a0)
		rts
; ---------------------------------------------------------------------------

ObjectDisplay:
		lea	(DisplayLists).w,a1
		move.b	$19(a0),d0
		andi.w	#7,d0
		lsl.w	#7,d0
		adda.w	d0,a1
		cmpi.w	#$7E,(a1)
		bcc.s	locret_8768
		addq.w	#2,(a1)
		adda.w	(a1),a1
		move.w	a0,(a1)

locret_8768:
		rts
; ---------------------------------------------------------------------------

ObjectDisplay2:
		lea	(DisplayLists).w,a2
		move.b	$19(a1),d0
		andi.w	#7,d0
		lsl.w	#7,d0
		adda.w	d0,a2
		cmpi.w	#$7E,(a2)
		bcc.s	locret_8786
		addq.w	#2,(a2)
		adda.w	(a2),a2
		move.w	a1,(a2)

locret_8786:
		rts
; ---------------------------------------------------------------------------

ObjectDelete:
		movea.l	a0,a1

loc_878A:
		moveq	#0,d1
		moveq	#$F,d0

loc_878E:
		move.l	d1,(a1)+
		dbf	d0,loc_878E
		rts
; ---------------------------------------------------------------------------

off_8796:	dc.l off_0, (unk_FFF700)&$FFFFFF, (unk_FFF708)&$FFFFFF, (unk_FFF718)&$FFFFFF
; ---------------------------------------------------------------------------

ProcessMaps:
		lea	(byte_FFF800).w,a2
		moveq	#0,d5
		lea	(DisplayLists).w,a4
		moveq	#7,d7

loc_87B2:
		tst.w	(a4)
		beq.w	loc_8876
		moveq	#2,d6

loc_87BA:
		movea.w	(a4,d6.w),a0
		tst.b	(a0)
		beq.w	loc_886E
		bclr	#7,1(a0)
		move.b	1(a0),d0
		move.b	d0,d4
		andi.w	#$C,d0
		beq.s	loc_8826
		movea.l	off_8796(pc,d0.w),a1
		moveq	#0,d0
		move.b	$18(a0),d0
		move.w	8(a0),d3
		sub.w	(a1),d3
		move.w	d3,d1
		add.w	d0,d1
		bmi.w	loc_886E
		move.w	d3,d1
		sub.w	d0,d1
		cmpi.w	#$140,d1
		bge.s	loc_886E
		addi.w	#$80,d3
		btst	#4,d4
		beq.s	loc_8830
		moveq	#0,d0
		move.b	$16(a0),d0
		move.w	$C(a0),d2
		sub.w	4(a1),d2
		move.w	d2,d1
		add.w	d0,d1
		bmi.s	loc_886E
		move.w	d2,d1
		sub.w	d0,d1
		cmpi.w	#$E0,d1
		bge.s	loc_886E
		addi.w	#$80,d2
		bra.s	loc_8848
; ---------------------------------------------------------------------------

loc_8826:
		move.w	$A(a0),d2
		move.w	8(a0),d3
		bra.s	loc_8848
; ---------------------------------------------------------------------------

loc_8830:
		move.w	$C(a0),d2
		sub.w	4(a1),d2
		addi.w	#$80,d2
		cmpi.w	#$60,d2
		bcs.s	loc_886E
		cmpi.w	#$180,d2
		bcc.s	loc_886E

loc_8848:
		movea.l	4(a0),a1
		moveq	#0,d1
		btst	#5,d4
		bne.s	loc_8864
		move.b	$1A(a0),d1
		add.b	d1,d1
		adda.w	(a1,d1.w),a1
		move.b	(a1)+,d1
		subq.b	#1,d1
		bmi.s	loc_8868

loc_8864:
		bsr.w	sub_8898

loc_8868:
		bset	#7,1(a0)

loc_886E:
		addq.w	#2,d6
		subq.w	#2,(a4)
		bne.w	loc_87BA

loc_8876:
		lea	$80(a4),a4
		dbf	d7,loc_87B2
		move.b	d5,(byte_FFF62C).w
		cmpi.b	#$50,d5
		beq.s	loc_8890
		move.l	#0,(a2)
		rts
; ---------------------------------------------------------------------------

loc_8890:
		move.b	#0,-5(a2)
		rts
; ---------------------------------------------------------------------------

sub_8898:
		movea.w	2(a0),a3
		btst	#0,d4
		bne.s	loc_88DE
		btst	#1,d4
		bne.w	loc_892C
; ---------------------------------------------------------------------------

sub_88AA:
		cmpi.b	#$50,d5
		beq.s	locret_88DC
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		move.b	(a1)+,d0
		lsl.w	#8,d0
		move.b	(a1)+,d0
		add.w	a3,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_88D6
		addq.w	#1,d0

loc_88D6:
		move.w	d0,(a2)+
		dbf	d1,sub_88AA

locret_88DC:
		rts
; ---------------------------------------------------------------------------

loc_88DE:
		btst	#1,d4
		bne.w	loc_8972

loc_88E6:
		cmpi.b	#$50,d5
		beq.s	locret_892A
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d4
		move.b	d4,(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		move.b	(a1)+,d0
		lsl.w	#8,d0
		move.b	(a1)+,d0
		add.w	a3,d0
		eori.w	#$800,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d0
		ext.w	d0
		neg.w	d0
		add.b	d4,d4
		andi.w	#$18,d4
		addq.w	#8,d4
		sub.w	d4,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_8924
		addq.w	#1,d0

loc_8924:
		move.w	d0,(a2)+
		dbf	d1,loc_88E6

locret_892A:
		rts
; ---------------------------------------------------------------------------

loc_892C:
		cmpi.b	#$50,d5
		beq.s	locret_8970
		move.b	(a1)+,d0
		move.b	(a1),d4
		ext.w	d0
		neg.w	d0
		lsl.b	#3,d4
		andi.w	#$18,d4
		addq.w	#8,d4
		sub.w	d4,d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		move.b	(a1)+,d0
		lsl.w	#8,d0
		move.b	(a1)+,d0
		add.w	a3,d0
		eori.w	#$1000,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_896A
		addq.w	#1,d0

loc_896A:
		move.w	d0,(a2)+
		dbf	d1,loc_892C

locret_8970:
		rts
; ---------------------------------------------------------------------------

loc_8972:
		cmpi.b	#$50,d5
		beq.s	locret_89C4
		move.b	(a1)+,d0
		move.b	(a1),d4
		ext.w	d0
		neg.w	d0
		lsl.b	#3,d4
		andi.w	#$18,d4
		addq.w	#8,d4
		sub.w	d4,d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d4
		move.b	d4,(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		move.b	(a1)+,d0
		lsl.w	#8,d0
		move.b	(a1)+,d0
		add.w	a3,d0
		eori.w	#$1800,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d0
		ext.w	d0
		neg.w	d0
		add.b	d4,d4
		andi.w	#$18,d4
		addq.w	#8,d4
		sub.w	d4,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_89BE
		addq.w	#1,d0

loc_89BE:
		move.w	d0,(a2)+
		dbf	d1,loc_8972

locret_89C4:
		rts
; ---------------------------------------------------------------------------

sub_89C6:
		move.w	8(a0),d0
		sub.w	(unk_FFF700).w,d0
		bmi.s	loc_89EA
		cmpi.w	#$140,d0
		bge.s	loc_89EA
		move.w	$C(a0),d1
		sub.w	(unk_FFF704).w,d1
		bmi.s	loc_89EA
		cmpi.w	#$E0,d1
		bge.s	loc_89EA
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

loc_89EA:
		moveq	#1,d0
		rts
; ---------------------------------------------------------------------------

LoadObjects:
		moveq	#0,d0
		move.b	(unk_FFF76C).w,d0
		move.w	off_89FC(pc,d0.w),d0
		jmp	off_89FC(pc,d0.w)
; ---------------------------------------------------------------------------

off_89FC:	dc.w loc_8A00-off_89FC, loc_8A44-off_89FC
; ---------------------------------------------------------------------------

loc_8A00:
		addq.b	#2,(unk_FFF76C).w
		move.w	(level).w,d0
		lsl.b	#6,d0
		lsr.w	#4,d0
		lea	(ObjectListArray).l,a0
		movea.l	a0,a1
		adda.w	(a0,d0.w),a0
		move.l	a0,(unk_FFF770).w
		move.l	a0,(unk_FFF774).w
		adda.w	2(a1,d0.w),a1
		move.l	a1,(unk_FFF778).w
		move.l	a1,(unk_FFF77C).w
		lea	(byte_FFFC00).w,a2
		move.w	#$101,(a2)+
		move.w	#$5E,d0

loc_8A38:
		clr.l	(a2)+
		dbf	d0,loc_8A38
		move.w	#$FFFF,(unk_FFF76E).w

loc_8A44:
		lea	(byte_FFFC00).w,a2
		moveq	#0,d2
		move.w	(unk_FFF700).w,d6
		andi.w	#$FF80,d6
		cmp.w	(unk_FFF76E).w,d6
		beq.w	locret_8B20
		bge.s	loc_8ABA
		move.w	d6,(unk_FFF76E).w
		movea.l	(unk_FFF774).w,a0
		subi.w	#$80,d6
		bcs.s	loc_8A96

loc_8A6A:
		cmp.w	-6(a0),d6
		bge.s	loc_8A96
		subq.w	#6,a0
		tst.b	4(a0)
		bpl.s	loc_8A80
		subq.b	#1,1(a2)
		move.b	1(a2),d2

loc_8A80:
		bsr.w	sub_8B22
		bne.s	loc_8A8A
		subq.w	#6,a0
		bra.s	loc_8A6A
; ---------------------------------------------------------------------------

loc_8A8A:
		tst.b	4(a0)
		bpl.s	loc_8A94
		addq.b	#1,1(a2)

loc_8A94:
		addq.w	#6,a0

loc_8A96:
		move.l	a0,(unk_FFF774).w
		movea.l	(unk_FFF770).w,a0
		addi.w	#$300,d6

loc_8AA2:
		cmp.w	-6(a0),d6
		bgt.s	loc_8AB4
		tst.b	-2(a0)
		bpl.s	loc_8AB0
		subq.b	#1,(a2)

loc_8AB0:
		subq.w	#6,a0
		bra.s	loc_8AA2
; ---------------------------------------------------------------------------

loc_8AB4:
		move.l	a0,(unk_FFF770).w
		rts
; ---------------------------------------------------------------------------

loc_8ABA:
		move.w	d6,(unk_FFF76E).w
		movea.l	(unk_FFF770).w,a0
		addi.w	#$280,d6

loc_8AC6:
		cmp.w	(a0),d6
		bls.s	loc_8ADA
		tst.b	4(a0)
		bpl.s	loc_8AD4
		move.b	(a2),d2
		addq.b	#1,(a2)

loc_8AD4:
		bsr.w	sub_8B22
		beq.s	loc_8AC6

loc_8ADA:
		move.l	a0,(unk_FFF770).w
		movea.l	(unk_FFF774).w,a0
		subi.w	#$300,d6
		bcs.s	loc_8AFA

loc_8AE8:
		cmp.w	(a0),d6
		bls.s	loc_8AFA
		tst.b	4(a0)
		bpl.s	loc_8AF6
		addq.b	#1,1(a2)

loc_8AF6:
		addq.w	#6,a0
		bra.s	loc_8AE8
; ---------------------------------------------------------------------------

loc_8AFA:
		move.l	a0,(unk_FFF774).w
		rts
; ---------------------------------------------------------------------------

loc_8B00:
		movea.l	(unk_FFF778).w,a0
		move.w	(unk_FFF718).w,d0
		addi.w	#$200,d0
		andi.w	#$FF80,d0
		cmp.w	(a0),d0
		bcs.s	locret_8B20
		bsr.w	sub_8B22
		move.l	a0,(unk_FFF778).w
		bra.w	loc_8B00
; ---------------------------------------------------------------------------

locret_8B20:
		rts
; ---------------------------------------------------------------------------

sub_8B22:
		tst.b	4(a0)
		bpl.s	loc_8B36
		bset	#7,2(a2,d2.w)
		beq.s	loc_8B36
		addq.w	#6,a0
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

loc_8B36:
		bsr.w	ObjectLoad
		bne.s	locret_8B70
		move.w	(a0)+,8(a1)
		move.w	(a0)+,d0
		move.w	d0,d1
		andi.w	#$FFF,d0
		move.w	d0,$C(a1)
		rol.w	#2,d1
		andi.b	#3,d1
		move.b	d1,1(a1)
		move.b	d1,$22(a1)
		move.b	(a0)+,d0
		bpl.s	loc_8B66
		andi.b	#$7F,d0
		move.b	d2,$23(a1)

loc_8B66:
		move.b	d0,0(a1)
		move.b	(a0)+,$28(a1)
		moveq	#0,d0

locret_8B70:
		rts
; ---------------------------------------------------------------------------

ObjectLoad:
		lea	(LevelObjectsList).w,a1
		move.w	#$5F,d0

loc_8B7A:
		tst.b	(a1)
		beq.s	locret_8B86
		lea	$40(a1),a1
		dbf	d0,loc_8B7A

locret_8B86:
		rts
; ---------------------------------------------------------------------------

LoadNextObject:
		movea.l	a0,a1
		move.w	#$F000,d0
		sub.w	a0,d0
		lsr.w	#6,d0
		subq.w	#1,d0
		bcs.s	locret_8BA2

loc_8B96:
		tst.b	(a1)
		beq.s	locret_8BA2
		lea	$40(a1),a1
		dbf	d0,loc_8B96

locret_8BA2:
		rts
; ---------------------------------------------------------------------------

ObjChopper:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	off_8BB6(pc,d0.w),d1
		jsr	off_8BB6(pc,d1.w)
		bra.w	ObjectChkDespawn
; ---------------------------------------------------------------------------

off_8BB6:	dc.w loc_8BBA-off_8BB6, loc_8BF0-off_8BB6
; ---------------------------------------------------------------------------

loc_8BBA:
		addq.b	#2,$24(a0)
		move.l	#MapChopper,4(a0)
		move.w	#$47B,2(a0)
		move.b	#4,1(a0)
		move.b	#4,$19(a0)
		move.b	#9,$20(a0)
		move.b	#$10,$18(a0)
		move.w	#$F900,$12(a0)
		move.w	$C(a0),$30(a0)

loc_8BF0:
		lea	(AniChopper).l,a1
		bsr.w	AnimateSprite
		bsr.w	ObjectMove
		addi.w	#$18,$12(a0)
		move.w	$30(a0),d0
		cmp.w	$C(a0),d0
		bcc.s	loc_8C18
		move.w	d0,$C(a0)
		move.w	#$F900,$12(a0)

loc_8C18:
		move.b	#1,$1C(a0)
		subi.w	#$C0,d0
		cmp.w	$C(a0),d0
		bcc.s	locret_8C3A
		move.b	#0,$1C(a0)
		tst.w	$12(a0)
		bmi.s	locret_8C3A
		move.b	#2,$1C(a0)

locret_8C3A:
		rts
; ---------------------------------------------------------------------------
