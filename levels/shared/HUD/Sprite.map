MapHUD:		dc.w byte_11620-MapHUD

byte_11620:	dc.b 9
		dc.b $80, $D, $80, 0, 0
		dc.b $80, $D, $80, $18, $20
		dc.b $80, $D, $80, $20, $40
		dc.b $90, $D, $80, $10, 0
		dc.b $90, $D, $80, $28, $28
		dc.b $A0, $D, $80, 8, 0
		dc.b $A0, 9, $80, $30, $28
		dc.b $40, 5, $81, $A, 0
		dc.b $40, $D, $81, $E, $10
; ---------------------------------------------------------------------------

ScoreAdd:
		move.b	#1,(byte_FFFE1F).w
		lea	(unk_FFFE50).w,a2
		lea	(dword_FFFE26).w,a3
		add.l	d0,(a3)
		move.l	#999999,d1
		cmp.l	(a3),d1
		bhi.w	loc_1166E
		move.l	d1,(a3)
		move.l	d1,(a2)

loc_1166E:
		move.l	(a3),d0
		cmp.l	(a2),d0
		bcs.w	locret_11678
		move.l	d0,(a2)

locret_11678:
		rts
; ---------------------------------------------------------------------------

UpdateHUD:
		tst.w	(word_FFFFFA).w
		bne.w	loc_11746
		tst.b	(byte_FFFE1F).w
		beq.s	loc_1169A
		clr.b	(byte_FFFE1F).w
		move.l	#$5C800003,d0
		move.l	(dword_FFFE26).w,d1
		bsr.w	sub_1187E

loc_1169A:
		tst.b	(ExtraLifeFlags).w
		beq.s	loc_116BA
		bpl.s	loc_116A6
		bsr.w	sub_117B2

loc_116A6:
		clr.b	(ExtraLifeFlags).w
		move.l	#$5F400003,d0
		moveq	#0,d1
		move.w	(Rings).w,d1
		bsr.w	sub_11874

loc_116BA:
		tst.b	(byte_FFFE1E).w
		beq.s	loc_1170E
		tst.w	(PauseFlag).w
		bmi.s	loc_1170E
		lea	(dword_FFFE26).w,a1
		addq.b	#1,-(a1)
		cmpi.b	#60,(a1)
		bcs.s	loc_1170E
		move.b	#0,(a1)
		addq.b	#1,-(a1)
		cmpi.b	#60,(a1)
		bcs.s	loc_116EE
		move.b	#0,(a1)
		addq.b	#1,-(a1)
		cmpi.b	#9,(a1)
		bcs.s	loc_116EE
		move.b	#9,(a1)

loc_116EE:
		move.l	#$5E400003,d0
		moveq	#0,d1
		move.b	(dword_FFFE22+1).w,d1
		bsr.w	sub_118F4
		move.l	#$5EC00003,d0
		moveq	#0,d1
		move.b	(dword_FFFE22+2).w,d1
		bsr.w	sub_118FE

loc_1170E:
		tst.b	(byte_FFFE1C).w
		beq.s	loc_1171C
		clr.b	(byte_FFFE1C).w
		bsr.w	sub_119BA

loc_1171C:
		tst.b	(byte_FFFE58).w
		beq.s	locret_11744
		clr.b	(byte_FFFE58).w
		move.l	#$6E000002,($C00004).l
		moveq	#0,d1
		move.w	(word_FFFE54).w,d1
		bsr.w	sub_11958
		moveq	#0,d1
		move.w	(word_FFFE56).w,d1
		bsr.w	sub_11958

locret_11744:
		rts
; ---------------------------------------------------------------------------

loc_11746:
		bsr.w	sub_1181E
		tst.b	(ExtraLifeFlags).w
		beq.s	loc_1176A
		bpl.s	loc_11756
		bsr.w	sub_117B2

loc_11756:
		clr.b	(ExtraLifeFlags).w
		move.l	#$5F400003,d0
		moveq	#0,d1
		move.w	(Rings).w,d1
		bsr.w	sub_11874

loc_1176A:
		move.l	#$5EC00003,d0
		moveq	#0,d1
		move.b	(byte_FFF62C).w,d1
		bsr.w	sub_118FE
		tst.b	(byte_FFFE1C).w
		beq.s	loc_11788
		clr.b	(byte_FFFE1C).w
		bsr.w	sub_119BA

loc_11788:
		tst.b	(byte_FFFE58).w
		beq.s	locret_117B0
		clr.b	(byte_FFFE58).w
		move.l	#$6E000002,($C00004).l
		moveq	#0,d1
		move.w	(word_FFFE54).w,d1
		bsr.w	sub_11958
		moveq	#0,d1
		move.w	(word_FFFE56).w,d1
		bsr.w	sub_11958

locret_117B0:
		rts
; ---------------------------------------------------------------------------

sub_117B2:
		move.l	#$5F400003,($C00004).l
		lea	byte_1181A(pc),a2
		move.w	#2,d2
		bra.s	loc_117E2
; ---------------------------------------------------------------------------

sub_117C6:
		lea	($C00000).l,a6
		bsr.w	sub_119BA
		move.l	#$5C400003,($C00004).l
		lea	byte_1180E(pc),a2
		move.w	#$E,d2

loc_117E2:
		lea	byte_11A26(pc),a1

loc_117E6:
		move.w	#$F,d1
		move.b	(a2)+,d0
		bmi.s	loc_11802
		ext.w	d0
		lsl.w	#5,d0
		lea	(a1,d0.w),a3

loc_117F6:
		move.l	(a3)+,(a6)
		dbf	d1,loc_117F6

loc_117FC:
		dbf	d2,loc_117E6
		rts
; ---------------------------------------------------------------------------

loc_11802:
		move.l	#0,(a6)
		dbf	d1,loc_11802
		bra.s	loc_117FC
; ---------------------------------------------------------------------------

byte_1180E:	dc.b $16, $FF, $FF, $FF, $FF, $FF, $FF, 0, 0, $14, 0, 0

byte_1181A:	dc.b $FF, $FF, 0, 0
; ---------------------------------------------------------------------------

sub_1181E:
		move.l	#$5C400003,($C00004).l
		move.w	(unk_FFF700).w,d1
		swap	d1
		move.w	(ObjectsList+8).w,d1
		bsr.s	sub_1183E
		move.w	(unk_FFF704).w,d1
		swap	d1
		move.w	(ObjectsList+$C).w,d1
; ---------------------------------------------------------------------------

sub_1183E:
		moveq	#7,d6
		lea	(ArtText).l,a1

loc_11846:
		rol.w	#4,d1
		move.w	d1,d2
		andi.w	#$F,d2
		cmpi.w	#$A,d2
		bcs.s	loc_11856
		addq.w	#7,d2

loc_11856:
		lsl.w	#5,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		swap	d1
		dbf	d6,loc_11846
		rts
; ---------------------------------------------------------------------------

sub_11874:
		lea	(dword_118E8).l,a2
		moveq	#2,d6
		bra.s	loc_11886
; ---------------------------------------------------------------------------

sub_1187E:
		lea	(dword_118DC).l,a2
		moveq	#5,d6

loc_11886:
		moveq	#0,d4
		lea	byte_11A26(pc),a1

loc_1188C:
		moveq	#0,d2
		move.l	(a2)+,d3

loc_11890:
		sub.l	d3,d1
		bcs.s	loc_11898
		addq.w	#1,d2
		bra.s	loc_11890
; ---------------------------------------------------------------------------

loc_11898:
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_118A2
		move.w	#1,d4

loc_118A2:
		tst.w	d4
		beq.s	loc_118D0
		lsl.w	#6,d2
		move.l	d0,4(a6)
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)

loc_118D0:
		addi.l	#$400000,d0
		dbf	d6,loc_1188C
		rts
; ---------------------------------------------------------------------------

dword_118DC:	dc.l 100000
		dc.l 10000

dword_118E4:	dc.l 1000

dword_118E8:	dc.l 100

dword_118EC:	dc.l 10

dword_118F0:	dc.l 1
; ---------------------------------------------------------------------------

sub_118F4:
		lea	(dword_118F0).l,a2
		moveq	#0,d6
		bra.s	loc_11906
; ---------------------------------------------------------------------------

sub_118FE:
		lea	(dword_118EC).l,a2
		moveq	#1,d6

loc_11906:
		moveq	#0,d4
		lea	byte_11A26(pc),a1

loc_1190C:
		moveq	#0,d2
		move.l	(a2)+,d3

loc_11910:
		sub.l	d3,d1
		bcs.s	loc_11918
		addq.w	#1,d2
		bra.s	loc_11910
; ---------------------------------------------------------------------------

loc_11918:
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_11922
		move.w	#1,d4

loc_11922:
		lsl.w	#6,d2
		move.l	d0,4(a6)
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		addi.l	#$400000,d0
		dbf	d6,loc_1190C
		rts
; ---------------------------------------------------------------------------

sub_11958:
		lea	(dword_118E4).l,a2
		moveq	#3,d6
		moveq	#0,d4
		lea	byte_11A26(pc),a1

loc_11966:
		moveq	#0,d2
		move.l	(a2)+,d3

loc_1196A:
		sub.l	d3,d1
		bcs.s	loc_11972
		addq.w	#1,d2
		bra.s	loc_1196A
; ---------------------------------------------------------------------------

loc_11972:
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_1197C
		move.w	#1,d4

loc_1197C:
		tst.w	d4
		beq.s	loc_119AC
		lsl.w	#6,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)

loc_119A6:
		dbf	d6,loc_11966
		rts
; ---------------------------------------------------------------------------

loc_119AC:
		moveq	#$F,d5

loc_119AE:
		move.l	#0,(a6)
		dbf	d5,loc_119AE
		bra.s	loc_119A6
; ---------------------------------------------------------------------------

sub_119BA:
		move.l	#$7BA00003,d0
		moveq	#0,d1
		move.b	(Lives).w,d1
		lea	(dword_118EC).l,a2
		moveq	#1,d6
		moveq	#0,d4
		lea	byte_11D26(pc),a1

loc_119D4:
		move.l	d0,4(a6)
		moveq	#0,d2
		move.l	(a2)+,d3

loc_119DC:
		sub.l	d3,d1
		bcs.s	loc_119E4
		addq.w	#1,d2
		bra.s	loc_119DC
; ---------------------------------------------------------------------------

loc_119E4:
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_119EE
		move.w	#1,d4

loc_119EE:
		tst.w	d4
		beq.s	loc_11A14

loc_119F2:
		lsl.w	#5,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)

loc_11A08:
		addi.l	#$400000,d0
		dbf	d6,loc_119D4
		rts
; ---------------------------------------------------------------------------

loc_11A14:
		tst.w	d6
		beq.s	loc_119F2
		moveq	#7,d5

loc_11A1A:
		move.l	#0,(a6)
		dbf	d5,loc_11A1A
		bra.s	loc_11A08
; ---------------------------------------------------------------------------

byte_11A26:	dc.b 0, 0, 0, 0, 0, $66, $66, $10, 6, $66, $66, $61, 6
		dc.b $61, $16, $61, 6, $61, 6, $61, 6, $61, 6, $61, 6
		dc.b $61, 6, $61, 6, $61, 6, $61, 6, $61, 6, $61, 6, $66
		dc.b $66, $61, 0, $66, $66, $10, 0, $11, $11, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 6, $61, 0, 0, $66, $61, 0, 0, 6, $61, 0, 0
		dc.b 6, $61, 0, 0, 6, $61, 0, 0, 6, $61, 0, 0, 6, $61
		dc.b 0, 0, 6, $61, 0, 0, 6, $61, 0, 0, 6, $61, 0, 0, 1
		dc.b $11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, $66, $66, $10, 6, $66, $66, $61
		dc.b 6, $61, $16, $61, 1, $11, $66, $61, 0, 6, $66, $10
		dc.b 0, $66, $61, 0, 0, $66, $10, 0, 6, $66, $10, 0, 6
		dc.b $66, $66, $61, 6, $66, $66, $61, 1, $11, $11, $11
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, $66, $66, $10, 6, $66, $66, $61, 6, $61
		dc.b $16, $61, 1, $11, 6, $61, 0, 6, $66, $10, 0, 6, $66
		dc.b $10, 0, 1, $16, $61, 6, $61, 6, $61, 6, $66, $66
		dc.b $61, 0, $66, $66, $10, 0, $11, $11, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, $66, $10, 0, 6, $66, $10, 0, 6, $66, $10, 0, $66
		dc.b $66, $10, 0, $61, $66, $10, 6, $61, $66, $10, 6, $66
		dc.b $66, $61, 6, $66, $66, $61, 1, $11, $66, $11, 0, 0
		dc.b $66, $10, 0, 0, $11, $10, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, $66, $66, $61
		dc.b 6, $66, $66, $61, 6, $61, $11, $11, 6, $61, 0, 0
		dc.b 6, $66, $66, $10, 6, $66, $66, $61, 1, $11, $16, $61
		dc.b 6, $61, 6, $61, 6, $66, $66, $61, 1, $66, $66, $10
		dc.b 0, $11, $11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, $66, $66, $10, 6, $66
		dc.b $66, $61, 6, $61, $16, $61, 6, $61, 1, $11, 6, $66
		dc.b $66, $10, 6, $66, $66, $61, 6, $61, $16, $61, 6, $61
		dc.b 6, $61, 6, $66, $66, $61, 0, $66, $66, $10, 0, $11
		dc.b $11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 6, $66, $66, $61, 6, $66, $66, $61
		dc.b 1, $11, $16, $61, 0, 0, $66, $10, 0, 0, $66, $10
		dc.b 0, 0, $66, $10, 0, 6, $61, 0, 0, 6, $61, 0, 0, 6
		dc.b $61, 0, 0, 6, $61, 0, 0, 1, $11, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, $66
		dc.b $66, $10, 6, $66, $66, $61, 6, $61, $16, $61, 6, $61
		dc.b 6, $61, 0, $66, $66, $10, 0, $66, $66, $10, 6, $61
		dc.b $16, $61, 6, $61, 6, $61, 6, $66, $66, $61, 0, $66
		dc.b $66, $10, 0, $11, $11, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, $66, $66, $10
		dc.b 6, $66, $66, $61, 6, $61, $16, $61, 6, $61, 6, $61
		dc.b 6, $66, $66, $61, 0, $66, $66, $61, 0, $11, $16, $61
		dc.b 6, $61, 6, $61, 6, $66, $66, $61, 0, $66, $66, $10
		dc.b 0, $11, $11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 6, $61, 0, 0, 6, $61, 0, 0, 1, $11, 0, 0, 0, 0, 0
		dc.b 0, 6, $61, 0, 0, 6, $61, 0, 0, 1, $11, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0, 0, 0, 0, 0, $F, $FF, $FF, $F1, $F, $FF
		dc.b $FF, $F1, $F, $F1, $11, $11, $F, $F1, 0, 0, $F, $FF
		dc.b $FF, $10, $F, $FF, $FF, $10, $F, $F1, $11, $10, $F
		dc.b $F1, 0, 0, $F, $FF, $FF, $F1, $F, $FF, $FF, $F1, 1
		dc.b $11, $11, $11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b 0, 0, 0, 0

byte_11D26:	dc.b 0, 0, 0, 0, 0, $66, $66, $10, 6, $61, $16, $61, 6
		dc.b $61, 6, $61, 6, $61, 6, $61, 6, $61, 6, $61, 0, $66
		dc.b $66, $10, 0, $11, $11, 0, 0, 0, 0, 0, 0, 6, $61, 0
		dc.b 0, $66, $61, 0, 0, $16, $61, 0, 0, 6, $61, 0, 0, 6
		dc.b $61, 0, 0, 6, $61, 0, 0, 1, $11, 0, 0, 0, 0, 0, 0
		dc.b $66, $66, $10, 0, $11, $16, $61, 0, 0, $66, $11, 0
		dc.b 6, $61, $10, 0, $66, $11, $10, 6, $66, $66, $61, 1
		dc.b $11, $11, $11, 0, 0, 0, 0, 0, $66, $66, $10, 0, $11
		dc.b $16, $61, 0, 6, $66, $10, 0, 1, $16, $61, 6, $61
		dc.b 6, $61, 0, $66, $66, $10, 0, $11, $11, 0, 0, 0, 0
		dc.b 0, 0, 0, $66, $10, 0, 6, $66, $10, 0, $61, $66, $10
		dc.b 6, $61, $66, $10, 6, $66, $66, $61, 1, $11, $66, $11
		dc.b 0, 0, $11, $10, 0, 0, 0, 0, 6, $66, $66, $61, 6, $61
		dc.b $11, $11, 6, $66, $66, $10, 1, $11, $16, $61, 6, $61
		dc.b 6, $61, 0, $66, $66, $10, 0, $11, $11, 0, 0, 0, 0
		dc.b 0, 0, $66, $66, $10, 6, $61, $11, $10, 6, $66, $66
		dc.b $10, 6, $61, $16, $61, 6, $61, 6, $61, 0, $66, $66
		dc.b $10, 0, $11, $11, 0, 0, 0, 0, 0, 6, $66, $66, $61
		dc.b 1, $11, $16, $61, 0, 0, $66, $10, 0, 6, $61, 0, 0
		dc.b $66, $10, 0, 0, $66, $10, 0, 0, $11, $10, 0, 0, 0
		dc.b 0, 0, 0, $66, $66, $10, 6, $61, $16, $61, 0, $66
		dc.b $66, $10, 6, $61, $16, $61, 6, $61, 6, $61, 0, $66
		dc.b $66, $10, 0, $11, $11, 0, 0, 0, 0, 0, 0, $66, $66
		dc.b $10, 6, $61, $16, $61, 6, $61, 6, $61, 0, $66, $66
		dc.b $61, 0, $11, $16, $61, 0, $66, $66, $10, 0, $11, $11
		dc.b 0
; ---------------------------------------------------------------------------

DebugMode:
		moveq	#0,d0
		move.b	(DebugRoutine).w,d0
		move.w	off_11E74(pc,d0.w),d1
		jmp	off_11E74(pc,d1.w)
; ---------------------------------------------------------------------------

off_11E74:	dc.w loc_11E78-off_11E74, loc_11EB8-off_11E74
; ---------------------------------------------------------------------------

loc_11E78:
		addq.b	#2,(DebugRoutine).w
		move.b	#0,$1A(a0)
		move.b	#0,$1C(a0)
		moveq	#0,d0
		move.b	(level).w,d0
		lea	(DebugLists).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d6
		cmp.b	(byte_FFFE06).w,d6
		bhi.s	loc_11EA8
		move.b	#0,(byte_FFFE06).w

loc_11EA8:
		bsr.w	sub_11FCE
		move.b	#$C,(byte_FFFE0A).w
		move.b	#1,(byte_FFFE0B).w

loc_11EB8:
		moveq	#0,d0
		move.b	(level).w,d0
		lea	(DebugLists).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d6
		bsr.w	sub_11ED6
		jmp	ObjectDisplay
; ---------------------------------------------------------------------------

sub_11ED6:
		moveq	#0,d4
		move.w	#1,d1
		move.b	(padPress1).w,d4
		bne.s	loc_11F0E
		tst.b	(padHeld1).w
		bne.s	loc_11EF6
		move.b	#$C,(byte_FFFE0A).w
		move.b	#$F,(byte_FFFE0B).w
		rts
; ---------------------------------------------------------------------------

loc_11EF6:
		subq.b	#1,(byte_FFFE0A).w
		bne.s	loc_11F12
		move.b	#1,(byte_FFFE0A).w
		addq.b	#1,(byte_FFFE0B).w
		bne.s	loc_11F0E
		move.b	#$FF,(byte_FFFE0B).w

loc_11F0E:
		move.b	(padHeld1).w,d4

loc_11F12:
		moveq	#0,d1
		move.b	(byte_FFFE0B).w,d1
		addq.w	#1,d1
		swap	d1
		asr.l	#4,d1
		move.l	$C(a0),d2
		move.l	8(a0),d3
		btst	#0,d4
		beq.s	loc_11F32
		sub.l	d1,d2
		bcc.s	loc_11F32
		moveq	#0,d2

loc_11F32:
		btst	#1,d4
		beq.s	loc_11F48
		add.l	d1,d2
		cmpi.l	#$7FF0000,d2
		bcs.s	loc_11F48
		move.l	#$7FF0000,d2

loc_11F48:
		btst	#2,d4
		beq.s	loc_11F54
		sub.l	d1,d3
		bcc.s	loc_11F54
		moveq	#0,d3

loc_11F54:
		btst	#3,d4
		beq.s	loc_11F5C
		add.l	d1,d3

loc_11F5C:
		move.l	d2,$C(a0)
		move.l	d3,8(a0)
		btst	#6,(padPressPlayer).w
		beq.s	loc_11F80
		addq.b	#1,(byte_FFFE06).w
		cmp.b	(byte_FFFE06).w,d6
		bhi.s	loc_11F7C
		move.b	#0,(byte_FFFE06).w

loc_11F7C:
		bra.w	sub_11FCE
; ---------------------------------------------------------------------------

loc_11F80:
		btst	#5,(padPressPlayer).w
		beq.s	loc_11FA4
		jsr	ObjectLoad
		bne.s	loc_11FA4
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	4(a0),0(a1)
		rts
; ---------------------------------------------------------------------------

loc_11FA4:
		btst	#4,(padPressPlayer).w
		beq.s	locret_11FCC
		moveq	#0,d0
		move.w	d0,(DebugRoutine).w
		move.l	#MapSonic,(ObjectsList+4).w
		move.w	#$780,(ObjectsList+2).w
		move.b	d0,(ObjectsList+$1C).w
		move.w	d0,$A(a0)
		move.w	d0,$E(a0)

locret_11FCC:
		rts
; ---------------------------------------------------------------------------

sub_11FCE:
		moveq	#0,d0
		move.b	(byte_FFFE06).w,d0
		lsl.w	#3,d0
		move.l	(a2,d0.w),4(a0)
		move.w	6(a2,d0.w),2(a0)
		move.b	5(a2,d0.w),$1A(a0)
		rts
; ---------------------------------------------------------------------------

DebugLists:	dc.w word_11FF6-DebugLists, word_12060-DebugLists, word_1207A-DebugLists, word_12104-DebugLists
		dc.w word_1216E-DebugLists, word_121D8-DebugLists

word_11FF6:	dc.w $D
		dc.l ($25<<24)|MapRing
		dc.b 0, 0, $27, $B2
		dc.l ($26<<24)|MapMonitor
		dc.b 0, 0, 6, $80
		dc.l ($1F<<24)|MapCrabmeat
		dc.b 0, 0, 4, 0
		dc.l ($22<<24)|MapBuzzbomber
		dc.b 0, 0, 4, $44
		dc.l ($2B<<24)|MapChopper
		dc.b 0, 0, 4, $7B
		dc.l ($36<<24)|MapSpikes
		dc.b 0, 0, 5, $1B
		dc.l ($18<<24)|MapPlatform1
		dc.b 0, 0, $40, 0
		dc.l ($3B<<24)|MapPurpleRock
		dc.b 0, 0, $63, $D0
		dc.l ($40<<24)|MapMotobug
		dc.b 0, 0, 4, $F0
		dc.l ($41<<24)|MapSpring
		dc.b 0, 0, 5, $23
		dc.l ($42<<24)|MapNewtron
		dc.b 0, 0, $24, $9B
		dc.l ($44<<24)|MapWall
		dc.b 0, 0, $43, $4C
		dc.l ($19<<24)|MapRollingBall
		dc.b 0, 0, $43, $AA

word_12060:	dc.w 3
		dc.l ($25<<24)|MapRing
		dc.b 0, 0, $27, $B2
		dc.l ($26<<24)|MapMonitor
		dc.b 0, 0, 6, $80
		dc.l ($1F<<24)|MapCrabmeat
		dc.b 0, 0, 4, 0

word_1207A:	dc.w $11
		dc.l ($25<<24)|MapRing
		dc.b 0, 0, $27, $B2
		dc.l ($26<<24)|MapMonitor
		dc.b 0, 0, 6, $80
		dc.l ($22<<24)|MapBuzzbomber
		dc.b 0, 0, 4, $44
		dc.l ($36<<24)|MapSpikes
		dc.b 0, 0, 5, $1B
		dc.l ($41<<24)|MapSpring
		dc.b 0, 0, 5, $23
		dc.l ($13<<24)|MapLavaball
		dc.b 0, 0, 3, $45
		dc.l ($46<<24)|MapMZBlocks
		dc.b 0, 0, $40, 0
		dc.l ($4C<<24)|MapLavafall
		dc.b 0, 0, $63, $A8
		dc.l ($4E<<24)|MapLavaChase
		dc.b 0, 0, $63, $A8
		dc.l ($33<<24)|MapPushBlock
		dc.b 0, 0, $42, $B8
		dc.l ($4F<<24)|Map4F
		dc.b 0, 0, 4, $E4
		dc.l ($50<<24)|MapYardin
		dc.b 0, 0, 4, $7B
		dc.l ($51<<24)|MapSmashBlock
		dc.b 0, 0, $42, $B8
		dc.l ($52<<24)|MapMovingPtfm
		dc.b 0, 0, 2, $B8
		dc.l ($53<<24)|MapCollapseFloor
		dc.b 0, 0, $62, $B8
		dc.l ($54<<24)|MapLavaHurt
		dc.b 0, 0, $86, $80
		dc.l ($55<<24)|MapBasaran
		dc.b 0, 0, $24, $B8

word_12104:	dc.w $D
		dc.l ($25<<24)|MapRing
		dc.b 0, 0, $27, $B2
		dc.l ($26<<24)|MapMonitor
		dc.b 0, 0, 6, $80
		dc.l ($59<<24)|MapSLZMovingPtfm
		dc.b 0, 0, $44, $80
		dc.l ($53<<24)|MapCollapseFloor
		dc.b 0, 2, $44, $E0
		dc.l ($18<<24)|MapPlatform3
		dc.b 0, 0, $44, $80
		dc.l ($5A<<24)|MapCirclePtfm
		dc.b 0, 0, $44, $80
		dc.l ($5B<<24)|MapStaircasePtfm
		dc.b 0, 0, $44, $80
		dc.l ($5D<<24)|MapFan
		dc.b 0, 0, $43, $A0
		dc.l ($5E<<24)|MapSeesaw
		dc.b 0, 0, 3, $74
		dc.l ($41<<24)|MapSpring
		dc.b 0, 0, 5, $23
		dc.l ($13<<24)|MapLavaball
		dc.b 0, 0, 3, $45
		dc.l ($1F<<24)|MapCrabmeat
		dc.b 0, 0, 4, 0
		dc.l ($22<<24)|MapBuzzbomber
		dc.b 0, 0, 4, $44

word_1216E:	dc.w $D
		dc.l ($25<<24)|MapRing
		dc.b 0, 0, $27, $B2
		dc.l ($26<<24)|MapMonitor
		dc.b 0, 0, 6, $80
		dc.l ($36<<24)|MapSpikes
		dc.b 0, 0, 5, $1B
		dc.l ($41<<24)|MapSpring
		dc.b 0, 0, 5, $23
		dc.l ($43<<24)|MapRoller
		dc.b 0, 0, $24, $B8
		dc.l ($12<<24)|MapSceneryLamp
		dc.b 0, 0, 0, 0
		dc.l ($47<<24)|MapBumper
		dc.b 0, 0, 3, $80
		dc.l ($1F<<24)|MapCrabmeat
		dc.b 0, 0, 4, 0
		dc.l ($22<<24)|MapBuzzbomber
		dc.b 0, 0, 4, $44
		dc.l ($50<<24)|MapYardin
		dc.b 0, 0, 4, $7B
		dc.l ($18<<24)|MapPlatform2
		dc.b 0, 0, $40, 0
		dc.l ($56<<24)|MapMovingBlocks
		dc.b 0, 0, $40, 0
		dc.l ($32<<24)|MapSwitch
		dc.b 0, 0, 5, $13

word_121D8:	dc.w 3
		dc.l ($25<<24)|MapRing
		dc.b 0, 0, $27, $B2
		dc.l ($26<<24)|MapMonitor
		dc.b 0, 0, 6, $80
		dc.l ($1F<<24)|MapCrabmeat
		dc.b 0, 0, 4, 0
		dc.l ($1E<<24)|MapBallhog
		dc.b 0, 0, $24, 0
		dc.l ($2C<<24)|MapJaws
		dc.b 0, 0, 4, $7B
		dc.l ($2D<<24)|MapBurrobot
		dc.b 0, 0, $24, $7B

LevelDataArray:	dc.l ($4<<24)|TilesGHZ_2, ($5<<24)|BlocksGHZ, ChunksGHZ
		dc.b 0, $81, 4, 4
		dc.l ($6<<24)|TilesLZ, ($7<<24)|BlocksLZ, ChunksLZ
		dc.b 0, $82, 5, 5
		dc.l ($8<<24)|TilesMZ, ($9<<24)|BlocksMZ, ChunksMZ
		dc.b 0, $83, 6, 6
		dc.l ($A<<24)|TilesSLZ, ($B<<24)|BlocksSLZ, ChunksSLZ
		dc.b 0, $84, 7, 7
		dc.l ($C<<24)|TilesSYZ, ($D<<24)|BlocksSYZ, ChunksSYZ
		dc.b 0, $85, 8, 8
		dc.l ($E<<24)|TilesSBZ, ($F<<24)|BlocksSBZ, ChunksSBZ
		dc.b 0, $86, 9, 9

plcArray:	dc.w word_122A0-plcArray, word_122C0-plcArray, word_122D4-plcArray, plcGameOver-plcArray
		dc.w plcGHZ1-plcArray, plzGHZ2-plcArray, plcLZ1-plcArray, plcLZ2-plcArray, plcMZ1-plcArray
		dc.w plcMZ2-plcArray, plzSLZ1-plcArray, plcSLZ2-plcArray, plzSYZ1-plcArray, plcSYZ2-plcArray
		dc.w plcSBZ1-plcArray, plcSBZ2-plcArray, plcTitleCards-plcArray, word_12484-plcArray
		dc.w plcSignPosts-plcArray, plcFlash-plcArray, word_124A8-plcArray, word_1251C-plcArray
		dc.w word_1252A-plcArray, word_12538-plcArray, word_12546-plcArray, word_12554-plcArray
		dc.w word_12562-plcArray

word_122A0:	dc.w 4
		dc.l ArtSmoke
		dc.w $F400
		dc.l ArtHUD
		dc.w $D940
		dc.l ArtLives
		dc.w $FA80
		dc.l ArtRings
		dc.w $F640
		dc.l byte_2E6C8
		dc.w $F2E0

word_122C0:	dc.w 2
		dc.l ArtMonitors
		dc.w $D000
		dc.l ArtShield
		dc.w $A820
		dc.l ArtInvinStars
		dc.w $AB80

word_122D4:	dc.w 0
		dc.l ArtExplosions
		dc.w $B400

plcGameOver:	dc.w 0
		dc.l ArtGameOver
		dc.w $B000

plcGHZ1:	dc.w $B
		dc.l TilesGHZ_1
		dc.w 0
		dc.l TilesGHZ_2
		dc.w $39A0
		dc.l byte_27400
		dc.w $6B00
		dc.l ArtPurpleRock
		dc.w $7A00
		dc.l ArtCrabmeat
		dc.w $8000
		dc.l ArtBuzzbomber
		dc.w $8880
		dc.l ArtChopper
		dc.w $8F60
		dc.l ArtNewtron
		dc.w $9360
		dc.l ArtMotobug
		dc.w $9E00
		dc.l ArtSpikes
		dc.w $A360
		dc.l ArtSpringHoriz
		dc.w $A460
		dc.l ArtSpringVerti
		dc.w $A660

plzGHZ2:	dc.w 5
		dc.l byte_2744A
		dc.w $7000
		dc.l ArtBridge
		dc.w $71C0
		dc.l ArtSpikeLogs
		dc.w $7300
		dc.l byte_27698
		dc.w $7540
		dc.l ArtSmashWall
		dc.w $A1E0
		dc.l ArtWall
		dc.w $6980

plcLZ1:		dc.w 0
		dc.l TilesLZ
		dc.w 0

plcLZ2:		dc.w 0
		dc.l ArtJaws
		dc.w $99C0

plcMZ1:		dc.w 9
		dc.l TilesMZ
		dc.w 0
		dc.l ArtChainPtfm
		dc.w $6000
		dc.l byte_2827A
		dc.w $68A0
		dc.l byte_2744A
		dc.w $7000
		dc.l byte_2816E
		dc.w $71C0
		dc.l byte_28558
		dc.w $7500
		dc.l ArtBuzzbomber
		dc.w $8880
		dc.l ArtYardin
		dc.w $8F60
		dc.l ArtBasaran
		dc.w $9700
		dc.l ArtSplats
		dc.w $9C80

plcMZ2:		dc.w 4
		dc.l ArtButtonMZ
		dc.w $A260
		dc.l ArtSpikes
		dc.w $A360
		dc.l ArtSpringHoriz
		dc.w $A460
		dc.l ArtSpringVerti
		dc.w $A660
		dc.l byte_28E6E
		dc.w $5700

plzSLZ1:	dc.w $A
		dc.l TilesSLZ
		dc.w 0
		dc.l byte_2827A
		dc.w $68A0
		dc.l ArtCrabmeat
		dc.w $8000
		dc.l ArtBuzzbomber
		dc.w $8880
		dc.l byte_297B6
		dc.w $9000
		dc.l byte_29D4A
		dc.w $9C00
		dc.l ArtMotobug
		dc.w $9E00
		dc.l byte_294DA
		dc.w $A260
		dc.l ArtSpikes
		dc.w $A360
		dc.l ArtSpringHoriz
		dc.w $A460
		dc.l ArtSpringVerti
		dc.w $A660

plcSLZ2:	dc.w 3
		dc.l ArtSeesaw
		dc.w $6E80
		dc.l ArtFan
		dc.w $7400
		dc.l byte_2953C
		dc.w $7980
		dc.l byte_2961E
		dc.w $7B80

plzSYZ1:	dc.w 4
		dc.l TilesSYZ
		dc.w 0
		dc.l ArtCrabmeat
		dc.w $8000
		dc.l ArtBuzzbomber
		dc.w $8880
		dc.l ArtYardin
		dc.w $8F60
		dc.l byte_2BC04
		dc.w $9700

plcSYZ2:	dc.w 6
		dc.l ArtBumper
		dc.w $7000
		dc.l byte_2A104
		dc.w $72C0
		dc.l byte_29FC0
		dc.w $7740
		dc.l ArtButton
		dc.w $A1E0
		dc.l ArtSpikes
		dc.w $A360
		dc.l ArtSpringHoriz
		dc.w $A460
		dc.l ArtSpringVerti
		dc.w $A660

plcSBZ1:	dc.w 0
		dc.l TilesSBZ
		dc.w 0

plcSBZ2:	dc.w 0
		dc.l ArtJaws
		dc.w $99C0

plcTitleCards:	dc.w 0
		dc.l ArtTitleCards
		dc.w $B000

word_12484:	dc.w 2
		dc.l byte_60000
		dc.w $8000
		dc.l byte_60864
		dc.w $8D80
		dc.l byte_60BB0
		dc.w $93A0

plcSignPosts:	dc.w 0
		dc.l ArtSignPost
		dc.w $D000

plcFlash:	dc.w 0
		dc.l ArtFlash
		dc.w $A820

word_124A8:	dc.w $B
		dc.l byte_64A7C
		dc.w 0
		dc.l ArtSpecialAnimals
		dc.w $A20
		dc.l ArtSpecialBlocks
		dc.w $2840
		dc.l ArtBumper
		dc.w $4760
		dc.l ArtSpecialGoal
		dc.w $4A20
		dc.l ArtSpecialUpDown
		dc.w $4C60
		dc.l ArtSpecialR
		dc.w $5E00
		dc.l ArtSpecial1up
		dc.w $6E00
		dc.l ArtSpecialStars
		dc.w $7E00
		dc.l byte_65432
		dc.w $8E00
		dc.l ArtSpecialSkull
		dc.w $9E00
		dc.l ArtSpecialU
		dc.w $AE00
		dc.l ArtSpecialEmerald
		dc.w 0
		dc.l ArtSpecialZone1
		dc.w 0
		dc.l ArtSpecialZone2
		dc.w 0
		dc.l ArtSpecialZone3
		dc.w 0
		dc.l ArtSpecialZone4
		dc.w 0
		dc.l ArtSpecialZone5
		dc.w 0
		dc.l ArtSpecialZone6
		dc.w 0

word_1251C:	dc.w 1
		dc.l ArtAnimalPocky
		dc.w $B000
		dc.l ArtAnimalCucky
		dc.w $B240

word_1252A:	dc.w 1
		dc.l ArtAnimalPecky
		dc.w $B000
		dc.l ArtAnimalRocky
		dc.w $B240

word_12538:	dc.w 1
		dc.l ArtAnimalPicky
		dc.w $B000
		dc.l ArtAnimalFlicky
		dc.w $B240

word_12546:	dc.w 1
		dc.l ArtAnimalRicky
		dc.w $B000
		dc.l ArtAnimalRocky
		dc.w $B240

word_12554:	dc.w 1
		dc.l ArtAnimalPicky
		dc.w $B000
		dc.l ArtAnimalCucky
		dc.w $B240

word_12562:	dc.w 1
		dc.l ArtAnimalPocky
		dc.w $B000
		dc.l ArtAnimalFlicky
		dc.w $B240
		align	$8000					; Unnecessary alignment
		incbin "unknown/18000.dat"
		even
ArtSega:	incbin "screens/sega/Main.nem"
		even
MapSega:	incbin "unknown/18A56.eni"
		even
byte_18A62:	incbin "unknown/18A62.unc"
		even
ArtTitleMain:	incbin "screens/title/Main.nem"
		even
ArtTitleSonic:	incbin "screens/title/Sonic.nem"
		even
